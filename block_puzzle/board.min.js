function getSize(n,t,i){return t*n+i*(n+1)}function getPermutations(n){const t=new Set,i=new Array(n.length).fill(!1);return backtrack(n,i,[],t),Array.from(t)}function backtrack(n,t,i,r){if(i.length===n.length){r.add(JSON.stringify([...i]));return}for(let u=0;u<n.length;u++)t[u]||(t[u]=!0,i.push(n[u]),backtrack(n,t,i,r),t[u]=!1,i.pop())}function initXY(){var n,t,i;for(let r=0;r<512;r++){let u={1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},e=0,f=r;n=0;for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i++)t=f%2,f=Math.floor(f/2),t&&n&&(u[n]++,n=0),n+=!t;n&&u[n]++;for(i in u)e+=(10-Number(i))*u[i];xyMap.push(e)}}function initZ(){var i,r,n,f,e,o,t,u;for(let s=0;s<512;s++){let h={1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},c=0;r=[[],[],[]];n=s;for(let t=8;t>=0;t--)f=n%2,n=Math.floor(n/2),e=Math.floor(t/3),o=t%3,r[e][o]=f;t=function(n,u){let f=0;return n<GAME_INFO.BOARD_BLOCK_SET_WIDTH&&u<GAME_INFO.BOARD_BLOCK_SET_WIDTH&&!i[n*GAME_INFO.BOARD_BLOCK_SET_WIDTH+u]&&r[n][u]&&(i[n*GAME_INFO.BOARD_BLOCK_SET_WIDTH+u]=!0,f=1+t(n+1,u)+t(n,u+1)),f};i={0:!1,1:!1,2:!1,3:!1,4:!1,5:!1,6:!1,7:!1,8:!1};for(let n=0;n<GAME_INFO.BOARD_BLOCK_SET_WIDTH;n++)for(let i=0;i<GAME_INFO.BOARD_BLOCK_SET_WIDTH;i++){let r=t(n,i);r&&h[r]++}for(u in h)c+=(10-Number(u))*h[u];zMap.push(c)}}function bestSolutionCheck(n,t,i){if(n.step.length===0||t.score>n.score||t.score===n.score&&t.strik>n.strik)Object.assign(n,t),n.statusScore=i.evaluateStatus();else if(t.score===n.score&&t.strik===n.strik){let r=i.evaluateStatus();n.statusScore>r&&(Object.assign(n,t),n.statusScore=r)}}function GetScore(n,t,i){return t>0?n.score+[0,18,42,66,90,114,132,150,168][t]+i*5:n.score}function clone(n){var t,i,u,r;if(typeof n=="object")if(n===null)t=null;else if(n instanceof Array)for(t=[],i=0,u=n.length;i<u;i++)t.push(clone(n[i]));else{t=Object.create(n);for(r in n)t[r]=clone(n[r])}else t=n;return t}function cloneSolution(n){return{step:n.step.slice(),strik:n.strik,score:n.score,statusScore:n.statusScore}}function dfs(n,t,i,r,u){if(i===t.length){bestSolutionCheck(r,u,n);return}const f=t[i];var e=!1;for(let o=0;o<=9-f.h;o++)for(let s=0;s<=9-f.w;s++)if(n.canPutAt(s,o,f)){e=!0;let c=n.clone();c.putAt(s,o,f);let l=c.checkAndEliminate(),a=l>0?u.strik+1:0,h=cloneSolution(u);h.step.push({x:s,y:o,shape:f});h.strik=a;h.score+=GetScore(f,l,u.strik);dfs(c,t,i+1,r,h)}e||u.step.length>r.step.length&&bestSolutionCheck(r,u,n)}function putShapes(n,t,i){if(t.length!==3)return!1;var r=clone(i);const u=getPermutations(t);for(let t of u){let u=JSON.parse(t);dfs(n,u,0,i,clone(r))}return!0}var shapes,xyMap,zMap;const GAME_INFO={BOARD_SIZE_BLOCK:9,BOARD_BLOCK_SET_WIDTH:3,BOARD_AREA:{SIZE:{X:450,Y:450}},ELEMENT_AREA:{SIZE:{X:450,Y:100}},ALL_ELEMENT_AREA:{SIZE:{X:450,Y:240}},BLOCK_SIZE_PX:50};class board extends canvas{constructor(n,t,i,r,u){super(n,t,i,"black");this.blockSize=r;this.spacing=u;this.color=["rgba(100, 70, 68, 255)","rgba(68, 43, 27, 255)","rgba(62, 181, 117, 255)","rgba(192, 10, 10, 255)"];this.board=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]]}draw(){for(var t,r,u,n=this.spacing,i=0;n<this.width;n+=this.blockSize+this.spacing,i++)for(t=this.spacing,r=0;t<this.width;t+=this.blockSize+this.spacing,r++)u=(Math.floor(n/3/this.blockSize)+Math.floor(t/3/this.blockSize))%2,this.board[r][i]===1&&(u=2),this.drawRoundedRect(n,t,this.blockSize,this.blockSize,3,this.color[u])}drawBoard(n){Object.assign(this.board,n);this.draw()}drawShape(n,t,i){for(var u,r=0;r<i.h;r++)for(u=0;u<i.w;u++){let f=this.spacing+(this.spacing+this.blockSize)*(n+u),e=this.spacing+(this.spacing+this.blockSize)*(t+r);i.s[r*i.w+u]&&this.drawRoundedRect(f,e,this.blockSize,this.blockSize,3,colors[6])}}getPosition(n,t){let i=Math.round((n-this.spacing)/(this.spacing+this.blockSize)),r=Math.round((t-this.spacing)/(this.spacing+this.blockSize));return i>=0&&i<9&&r>=0&&r<9?{x:i,y:r}:null}enableEdit(n){this.canvas.onclick=n?n=>this.onClick(n):null}onClick(n){let t=Math.floor((n.offsetX-this.spacing)/(this.spacing+this.blockSize)),i=Math.floor((n.offsetY-this.spacing)/(this.spacing+this.blockSize));t>=0&&t<9&&i>=0&&i<9&&(this.board[i][t]=this.board[i][t]?0:1,this.draw())}}shapes=[{w:2,h:1,s:[1,1],c:0,score:2},{w:3,h:1,s:[1,1,1],c:0,score:3},{w:4,h:1,s:[1,1,1,1],c:0,score:4},{w:5,h:1,s:[1,1,1,1,1],c:0,score:5},{w:1,h:2,s:[1,1],c:0,score:2},{w:1,h:3,s:[1,1,1],c:0,score:3},{w:1,h:4,s:[1,1,1,1],c:0,score:4},{w:1,h:5,s:[1,1,1,1,1],c:0,score:5},{w:3,h:2,s:[1,1,1,1,0,0],c:1,score:4},{w:3,h:2,s:[1,1,1,0,0,1],c:1,score:4},{w:3,h:2,s:[1,0,0,1,1,1],c:1,score:4},{w:3,h:2,s:[0,0,1,1,1,1],c:1,score:4},{w:2,h:3,s:[1,1,1,0,1,0],c:1,score:4},{w:2,h:3,s:[1,1,0,1,0,1],c:1,score:4},{w:2,h:3,s:[1,0,1,0,1,1],c:1,score:4},{w:2,h:3,s:[0,1,0,1,1,1],c:1,score:4},{w:4,h:2,s:[1,0,0,0,1,1,1,1],c:3,score:5},{w:4,h:2,s:[0,0,0,1,1,1,1,1],c:3,score:5},{w:4,h:2,s:[1,1,1,1,1,0,0,0],c:3,score:5},{w:4,h:2,s:[1,1,1,1,0,0,0,1],c:3,score:5},{w:2,h:4,s:[1,1,1,0,1,0,1,0],c:3,score:5},{w:2,h:4,s:[1,1,0,1,0,1,0,1],c:3,score:5},{w:2,h:4,s:[1,0,1,0,1,0,1,1],c:3,score:5},{w:2,h:4,s:[0,1,0,1,0,1,1,1],c:3,score:5},{w:3,h:2,s:[1,1,1,0,1,0],c:2,score:4},{w:3,h:2,s:[0,1,0,1,1,1],c:2,score:4},{w:2,h:3,s:[1,0,1,1,1,0],c:2,score:4},{w:2,h:3,s:[0,1,1,1,0,1],c:2,score:4},{w:3,h:2,s:[0,1,1,1,1,0],c:2,score:4},{w:3,h:2,s:[1,1,0,0,1,1],c:2,score:4},{w:2,h:3,s:[1,0,1,1,0,1],c:2,score:4},{w:2,h:3,s:[0,1,1,1,1,0],c:2,score:4},{w:2,h:2,s:[1,1,1,0],c:0,score:3},{w:2,h:2,s:[1,1,0,1],c:0,score:3},{w:2,h:2,s:[1,0,1,1],c:0,score:3},{w:2,h:2,s:[0,1,1,1],c:0,score:3},{w:3,h:3,s:[1,1,1,1,0,0,1,0,0],c:3,score:5},{w:3,h:3,s:[1,1,1,0,0,1,0,0,1],c:3,score:5},{w:3,h:3,s:[1,0,0,1,0,0,1,1,1],c:3,score:5},{w:3,h:3,s:[0,0,1,0,0,1,1,1,1],c:3,score:5},{w:2,h:3,s:[1,1,1,0,1,1],c:4,score:5},{w:2,h:3,s:[1,1,0,1,1,1],c:4,score:5},{w:3,h:2,s:[1,1,1,1,0,1],c:4,score:5},{w:3,h:2,s:[1,0,1,1,1,1],c:4,score:5},{w:3,h:3,s:[1,1,1,0,1,0,0,1,0],c:4,score:5},{w:3,h:3,s:[0,1,0,0,1,0,1,1,1],c:4,score:5},{w:3,h:3,s:[1,0,0,1,1,1,1,0,0],c:4,score:5},{w:3,h:3,s:[0,0,1,1,1,1,0,0,1],c:4,score:5},{w:1,h:1,s:[1],c:0,score:1},{w:2,h:2,s:[1,0,0,1],c:2,score:2},{w:2,h:2,s:[0,1,1,0],c:2,score:2},{w:3,h:3,s:[1,0,0,0,1,0,0,0,1],c:2,score:3},{w:3,h:3,s:[0,0,1,0,1,0,1,0,0],c:3,score:3},{w:4,h:4,s:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],c:5,score:4},{w:4,h:4,s:[0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0],c:5,score:4},{w:2,h:2,s:[1,1,1,1],c:0,score:4},{w:3,h:3,s:[0,1,0,1,1,1,0,1,0],c:5,score:5},{w:3,h:3,s:[1,0,0,1,1,1,0,0,1],c:5,score:5},{w:3,h:3,s:[0,0,1,1,1,1,1,0,0],c:5,score:5},{w:3,h:3,s:[0,1,1,0,1,0,1,1,0],c:5,score:5},{w:3,h:3,s:[1,1,0,0,1,0,0,1,1],c:5,score:5}];const colors=["#74A800","#07C160","#1196FF","#8183FF","#CC9C00","#C87D2F","#FA5151","#3EB575","#10AEFF","#7D90A9"],rate_0=[[0,9],[1,18],[2,9],[4,9],[5,18],[6,9],[55,28]];class roundGen{constructor(){this.shapeSelector=[]}setRate(n){var i,r;this.shapeSelector=[];let t=[];for(i of n)for(r=0;r<i[1];r++)t.push(i[0]);while(t.length>0){let n=Math.floor(Math.random()*t.length);this.shapeSelector.push(t[n]);t.splice(n,1)}}getShapes(){for(var n=[],t=0;t<3;t++){let t=Math.floor(Math.random()*this.shapeSelector.length);n.push(shapes[this.shapeSelector[t]])}return n}}class shapeSelector extends canvas{constructor(n,t){super(n,t,t,"black");this.frameWidth=2;this.shapePos=null;this.enable=!0;this.roundSelected=[];this.highlightShape=null;this.lineCount=Math.round(Math.sqrt(shapes.length)+.5);this.shapeSize=Math.floor(t/this.lineCount);this.spacing=1;this.blockSize=Math.floor((this.shapeSize-this.frameWidth*2)/5-this.spacing);this.shapes=shapes;for(var i=0;i<this.shapes.length;i++)this.shapes[i].id=i;this.canvas.addEventListener("click",n=>this.onMouseClick(n));this.canvas.addEventListener("mouseout",n=>this.onMouseOut(n));this.canvas.addEventListener("mousemove",n=>this.onMouseMove(n))}draw(){var n,i,r,t;let u=this.shapePos===null;for(u&&(this.shapePos=[]),n=0;n<this.shapes.length;n++){let o=n%this.lineCount,s=Math.floor(n/this.lineCount);i=o*this.shapeSize;r=s*this.shapeSize;let f=getSize(shapes[n].w,this.blockSize,this.spacing),e=getSize(shapes[n].h,this.blockSize,this.spacing);i+=Math.floor((this.shapeSize-f)/2)+this.spacing;r+=Math.floor((this.shapeSize-e)/2)+this.spacing;this.drawShape(i,r,shapes[n],colors[shapes[n].c]);u&&(t={},t.x=i,t.y=r,t.width=f,t.height=e,t.shape=shapes[n],this.shapePos.push(t))}}drawShape(n,t,i,r){for(var f,u=0;u<i.h;u++)for(f=0;f<i.w;f++){let e=n+(this.spacing+this.blockSize)*f,o=t+(this.spacing+this.blockSize)*u;i.s[u*i.w+f]&&this.drawRoundedRect(e,o,this.blockSize,this.blockSize,2,r)}}clearSelect(){this.roundSelected=[]}findShapeAtPos(n,t){for(var i=0;i<this.shapePos.length;i++){let r=this.shapePos[i];if(this.isPointInRectangle(r.x,r.y,r.width,r.height,n,t))return r}return null}onMouseClick(n){if(this.enable!==!1&&this.shapePos!==null){const i=n.offsetX,r=n.offsetY;let t=this.findShapeAtPos(i,r);if(t){this.roundSelected.length>=3&&this.roundSelected.shift();this.roundSelected.push(t);var n=new CustomEvent("SelectedShapeChanged",{detail:this.roundSelected});this.canvas.dispatchEvent(n)}}}onMouseOut(){this.enable!==!1&&this.clearHighlight()}clearHighlight(){this.highlightShape&&(this.drawShape(this.highlightShape.x,this.highlightShape.y,this.highlightShape.shape,colors[this.highlightShape.shape.c]),this.highlightShape=null)}onMouseMove(n){if(this.enable!==!1){var i=n.target.getBoundingClientRect(),r=n.clientX-i.left,u=n.clientY-i.top;let t=this.findShapeAtPos(r,u);if(t){if(this.highlightShape){if(this.highlightShape==t)return;this.drawShape(this.highlightShape.x,this.highlightShape.y,this.highlightShape.shape,colors[this.highlightShape.shape.c])}this.highlightShape=t;this.drawShape(t.x,t.y,t.shape,colors[9]);return}this.clearHighlight()}}addSelectedShapeChangedEventListener(n){this.canvas.addEventListener("SelectedShapeChanged",n)}}const transparentColor="rgba(255, 255, 255, 0)";class dragbleShape extends canvas{constructor(n,t,i,r,u){super(n,r,r,transparentColor);this.shape=null;this.spacing=1;this.frameWidth=1;this.isDragging=!1;this.shapeDraged=null;this.bigBlockSize=u;this.blockSize=Math.floor((r-this.frameWidth*2-this.spacing)/5)-this.spacing;this.info={size:r,x:t,y:i};let f=this.calculateRect();this.resize(f.left,f.top,f.width,f.height,10)}enableBig(n){this.blockSize=n?this.bigBlockSize:Math.floor((this.info.size-this.frameWidth*2-this.spacing)/5)-this.spacing;let t=this.calculateRect();this.resize(t.left,t.top,t.width,t.height,10);this.draw()}calculateRect(){if(this.shape!==null){let n=getSize(this.shape.w,this.blockSize,this.spacing),t=getSize(this.shape.h,this.blockSize,this.spacing);return{left:Math.round(this.info.x-n/2),top:Math.round(this.info.y-t/2),width:n,height:t}}return{left:this.info.x,top:this.info.y,width:1,height:1}}setShape(n){this.shape=n;let t=this.calculateRect();this.resize(t.left,t.top,t.width,t.height,10);this.draw()}draw(){this.clear(transparentColor);this.shape!==null&&this.drawShape(0,0,this.shape)}drawShape(n,t,i){for(var u,r=0;r<i.h;r++)for(u=0;u<i.w;u++){let f=n+(this.spacing+this.blockSize)*u,e=t+(this.spacing+this.blockSize)*r;i.s[r*i.w+u]&&this.drawRoundedRect(f,e,this.blockSize,this.blockSize,2,"green")}}enableDrag(n){this.canvas.onmousedown=n&&this.shape!==null?n=>this.onMouseDown(n):null}onMouseDown(n){n.preventDefault();this.isDragging=!0;this.enableBig(!0);this.offsetX=n.clientX-this.canvas.offsetLeft;this.offsetY=n.clientY-this.canvas.offsetTop;this.canvas.onmousemove=n=>this.onMouseMove(n);this.canvas.onmouseup=n=>this.onMouseUp(n)}onMouseMove(n){if(this.isDragging){var t=n.clientX-this.offsetX,i=n.clientY-this.offsetY;this.setPosition(t,i,100)}}onMouseUp(n){if(this.isDragging){this.isDragging=!1;this.canvas.onmousemove=null;this.canvas.onmouseup=null;var t=n.clientX-this.offsetX,i=n.clientY-this.offsetY;shapeDraged!==null&&(shapeDraged(t,i,this.shape)?(this.canvas.onmousedown=null,this.shape=null,this.enableBig(!1)):this.enableBig(!1))}}}class roundShape extends canvas{constructor(n,t,i){super(n,t,i,"rgba(32, 32, 32, 255)");this.spacing=3;this.lineCount=3;this.frameWidth=4;this.selectedShape=[];this.colWidth=Math.floor((t-2*this.frameWidth)/this.lineCount);this.colHeight=i-2*this.frameWidth;let r=Math.min(Math.floor(t/this.lineCount),i)-(this.spacing+this.frameWidth)*2;this.blockSize=Math.floor(r/5)-this.spacing}draw(n){var t,i,r;for(this.clear(this.backgroundColor),this.selectedShape=[],t=0;t<n.length;t++){i=this.frameWidth+t*this.colWidth;r=this.frameWidth;let u=n[t],f=getSize(u.w,this.blockSize,this.spacing),e=getSize(u.h,this.blockSize,this.spacing);i+=Math.floor((this.colWidth-f)/2);r+=Math.floor((this.colHeight-e)/2);this.drawShape(i,r,u);this.selectedShape.push(u)}}getSelectedShape(){return this.selectedShape}drawShape(n,t,i){for(var u,r=0;r<i.h;r++)for(u=0;u<i.w;u++){let f=n+(this.spacing+this.blockSize)*u,e=t+(this.spacing+this.blockSize)*r;i.s[r*i.w+u]&&this.drawRoundedRect(f,e,this.blockSize,this.blockSize,2,colors[i.c])}}}xyMap=[];initXY();zMap=[];initZ();class slover{constructor(){this.board=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]];this.chromosome={a:5.44,b:6.17,c:5.85,d:3.9,e:-5.37,f:3.53,g:-5.76,h:-.66}}clone(){for(var t=new slover,n=0;n<GAME_INFO.BOARD_SIZE_BLOCK;n++)t.board[n]=this.board[n].slice();return t}canEliminateRow(n){for(let t=0;t<GAME_INFO.BOARD_SIZE_BLOCK;t++)if(this.board[n][t]===0)return!1;return!0}canEliminateCol(n){for(let t=0;t<GAME_INFO.BOARD_SIZE_BLOCK;t++)if(this.board[t][n]===0)return!1;return!0}canEliminateBlock(n,t){for(let i=0;i<3;i++)for(let r=0;r<3;r++)if(this.board[n+i][t+r]===0)return!1;return!0}canEliminateBlockSet(n){n=Number(n);let t=n%GAME_INFO.BOARD_BLOCK_SET_WIDTH*GAME_INFO.BOARD_BLOCK_SET_WIDTH,i=Math.floor(n/GAME_INFO.BOARD_BLOCK_SET_WIDTH)*GAME_INFO.BOARD_BLOCK_SET_WIDTH;return this.canEliminateBlock(i,t)}checkAndEliminate(){var t=[],n=0;for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i++)if(this.canEliminateRow(i)){for(let n=0;n<GAME_INFO.BOARD_SIZE_BLOCK;n++)t.push([i,n]);n++}for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i++)if(this.canEliminateCol(i)){for(let n=0;n<GAME_INFO.BOARD_SIZE_BLOCK;n++)t.push([n,i]);n++}for(let t=0;t<GAME_INFO.BOARD_SIZE_BLOCK;t+=3)for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i+=3)if(this.canEliminateBlock(t,i)){for(let n=0;n<3;n++)for(let r=0;r<3;r++)this.board[t+n][i+r]=0;n++}for(let n of t)this.board[n[0]][n[1]]=0;return n}canPutAt(n,t,i){for(var u,r=0;r<i.h;r++)for(u=0;u<i.w;u++){let f=this.board[r+t][u+n],e=i.s[r*i.w+u];if(f===1&&e===1)return!1}return!0}putAt(n,t,i){for(var u,r=0;r<i.h;r++)for(u=0;u<i.w;u++)this.board[r+t][u+n]|=i.s[r*i.w+u]}getBlockSet_fast(n){n=Number(n);let t=0,i=n%GAME_INFO.BOARD_BLOCK_SET_WIDTH*GAME_INFO.BOARD_BLOCK_SET_WIDTH,r=Math.floor(n/GAME_INFO.BOARD_BLOCK_SET_WIDTH)*GAME_INFO.BOARD_BLOCK_SET_WIDTH;for(let n=0;n<GAME_INFO.BOARD_BLOCK_SET_WIDTH;n++){var u=n+r;for(let n=0;n<GAME_INFO.BOARD_BLOCK_SET_WIDTH;n++)t=t*2+this.board[u][n+i]}return t}getBlockSet(n){var t,r;n=Number(n);let i={},u={x:n%GAME_INFO.BOARD_BLOCK_SET_WIDTH*GAME_INFO.BOARD_BLOCK_SET_WIDTH,y:Math.floor(n/GAME_INFO.BOARD_BLOCK_SET_WIDTH)*GAME_INFO.BOARD_BLOCK_SET_WIDTH};for(let n=0;n<GAME_INFO.BOARD_BLOCK_SET_WIDTH;n++){t=n+u.y;i[t]===undefined&&(i[t]={});for(let n=0;n<GAME_INFO.BOARD_BLOCK_SET_WIDTH;n++)r=n+u.x,i[t][r]=this.board[t][r]}return i}getX_fast(){let n=0;for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i++){var t=0;for(let n=0;n<GAME_INFO.BOARD_SIZE_BLOCK;n++)t=t*2+this.board[n][i];n+=xyMap[t]}return n/=GAME_INFO.BOARD_SIZE_BLOCK*45,n=Math.round(n*100)/100}getX(){var t,i,r;let n={divCount:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},divValue:0};for(let r=0;r<GAME_INFO.BOARD_SIZE_BLOCK;r++){t=0;for(let u=0;u<GAME_INFO.BOARD_SIZE_BLOCK;u++)i=this.board[u][r],i&&t&&(n.divCount[t]++,t=0),t+=!i;t&&n.divCount[t]++}for(r in n.divCount)n.divValue+=(10-Number(r))*n.divCount[r];return n.divValue/=GAME_INFO.BOARD_SIZE_BLOCK*45,n.divValue=Math.round(n.divValue*100)/100,n}getY_fast(){let n=0;for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i++){var t=0;for(let n=0;n<GAME_INFO.BOARD_SIZE_BLOCK;n++)t=t*2+this.board[i][n];n+=xyMap[t]}return n/=GAME_INFO.BOARD_SIZE_BLOCK*45,n=Math.round(n*100)/100}getY(){var t,i,r;let n={divCount:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},divValue:0};for(let r=0;r<GAME_INFO.BOARD_SIZE_BLOCK;r++){t=0;for(let u=0;u<GAME_INFO.BOARD_SIZE_BLOCK;u++)i=this.board[r][u],i&&t&&(n.divCount[t]++,t=0),t+=!i;t&&n.divCount[t]++}for(r in n.divCount)n.divValue+=(10-Number(r))*n.divCount[r];return n.divValue/=GAME_INFO.BOARD_SIZE_BLOCK*45,n.divValue=Math.round(n.divValue*100)/100,n}getZ_fast(){let n=0;for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i++){var t=this.getBlockSet_fast(i);n+=zMap[t]}return n/=GAME_INFO.BOARD_SIZE_BLOCK*45,n=Math.round(n*100)/100}getZ(){var i,u,t,r;let n={divCount:{1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0},divValue:0};t=function(n,r,f){let e=0;return r<GAME_INFO.BOARD_BLOCK_SET_WIDTH&&f<GAME_INFO.BOARD_BLOCK_SET_WIDTH&&!i[r*GAME_INFO.BOARD_BLOCK_SET_WIDTH+f]&&u[r+n.y][f+n.x]&&(i[r*GAME_INFO.BOARD_BLOCK_SET_WIDTH+f]=!0,e=1+t(n,r+1,f)+t(n,r,f+1)),e};for(let r=0;r<GAME_INFO.BOARD_SIZE_BLOCK;r++){i={0:!1,1:!1,2:!1,3:!1,4:!1,5:!1,6:!1,7:!1,8:!1};u=this.getBlockSet(r);for(let i=0;i<GAME_INFO.BOARD_BLOCK_SET_WIDTH;i++)for(let u=0;u<GAME_INFO.BOARD_BLOCK_SET_WIDTH;u++){let f=t({x:r%GAME_INFO.BOARD_BLOCK_SET_WIDTH*GAME_INFO.BOARD_BLOCK_SET_WIDTH,y:Math.floor(r/GAME_INFO.BOARD_BLOCK_SET_WIDTH)*GAME_INFO.BOARD_BLOCK_SET_WIDTH},i,u);f&&n.divCount[f]++}}for(r in n.divCount)n.divValue+=(10-Number(r))*n.divCount[r];return n.divValue/=GAME_INFO.BOARD_SIZE_BLOCK*45,n.divValue=Math.round(n.divValue*100)/100,n}getW(){let n=0;for(let t=0;t<GAME_INFO.BOARD_SIZE_BLOCK;t++)for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK;i++)n+=this.board[t][i];return n/=Math.pow(GAME_INFO.BOARD_SIZE_BLOCK,2),Math.round(n*100)/100}getT(){let n=0;for(let t=0;t<GAME_INFO.BOARD_SIZE_BLOCK;t++)n+=this.canEliminateBlockSet(t)?1:0,n+=this.canEliminateRow(t)?1:0,n+=this.canEliminateCol(t)?1:0;return n/=3*GAME_INFO.BOARD_SIZE_BLOCK,Math.round(n*100)/100}getS(){var i,t,r;let n={divCount:{},divValue:0};i=[];for(let t=0;t<GAME_INFO.BOARD_SIZE_BLOCK*GAME_INFO.BOARD_SIZE_BLOCK;t++)n.divCount[t+1]=0,i.push(!1);t=function(n,r,u){let f=0,e=u*GAME_INFO.BOARD_SIZE_BLOCK+r;return u<GAME_INFO.BOARD_SIZE_BLOCK&&r<GAME_INFO.BOARD_SIZE_BLOCK&&!i[e]&&n[u][r]&&(i[e]=!0,f=1+t(n,r+1,u)+t(n,r,u+1)+t(n,r+1,u+1)),f};for(let i=0;i<GAME_INFO.BOARD_SIZE_BLOCK*GAME_INFO.BOARD_SIZE_BLOCK;i++){let r=t(this.board,i%GAME_INFO.BOARD_SIZE_BLOCK,Math.floor(i/GAME_INFO.BOARD_SIZE_BLOCK));r&&n.divCount[r]++}for(r in n.divCount)n.divValue+=(GAME_INFO.BOARD_SIZE_BLOCK*GAME_INFO.BOARD_SIZE_BLOCK+1-Number(r))*n.divCount[r];return n.divValue/=GAME_INFO.BOARD_SIZE_BLOCK*GAME_INFO.BOARD_SIZE_BLOCK*45,n.divValue=Math.round(n.divValue*100)/100,n}evaluateStatus(){let n=this.chromosome.a*this.getX_fast()+this.chromosome.b*this.getY_fast()+this.chromosome.c*this.getZ_fast();return+this.chromosome.d*this.getW()+this.chromosome.f+this.chromosome.g*this.getT()+this.chromosome.h*this.getS().divValue,Math.abs(n)}}